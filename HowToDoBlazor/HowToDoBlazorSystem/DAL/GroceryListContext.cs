// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using HowToDoBlazorSystem.Entities;
using Microsoft.EntityFrameworkCore;

namespace HowToDoBlazorSystem.DAL;

internal partial class GroceryListContext : DbContext
{
    public GroceryListContext(DbContextOptions<GroceryListContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Category> Categories { get; set; }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<Delivery> Deliveries { get; set; }

    public virtual DbSet<Order> Orders { get; set; }

    public virtual DbSet<OrderList> OrderLists { get; set; }

    public virtual DbSet<Picker> Pickers { get; set; }

    public virtual DbSet<Product> Products { get; set; }

    public virtual DbSet<Store> Stores { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Category>(entity =>
        {
            entity.HasKey(e => e.CategoryID).HasName("PK__Categori__19093A2B9297DDFE");

            entity.Property(e => e.Description).IsFixedLength();
        });

        modelBuilder.Entity<Customer>(entity =>
        {
            entity.HasKey(e => e.CustomerID).HasName("PK__Customer__A4AE64B821ECF041");

            entity.Property(e => e.Phone).IsFixedLength();
            entity.Property(e => e.Province).IsFixedLength();
        });

        modelBuilder.Entity<Delivery>(entity =>
        {
            entity.HasKey(e => e.DeliveryID).HasName("PK__Deliveri__626D8FEE2B8F27F0");

            entity.ToTable(tb => tb.HasTrigger("DeliveriesOrders"));
        });

        modelBuilder.Entity<Order>(entity =>
        {
            entity.HasKey(e => e.OrderID).HasName("PK__Orders__C3905BAFBEC27BF0");

            entity.ToTable(tb => tb.HasTrigger("OrdersPickers"));

            entity.HasOne(d => d.Customer).WithMany(p => p.Orders)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OrdersCustomers_CustomerID");

            entity.HasOne(d => d.Store).WithMany(p => p.Orders)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OrdersStores_StoreID");
        });

        modelBuilder.Entity<OrderList>(entity =>
        {
            entity.HasKey(e => e.OrderListID).HasName("PK__OrderLis__BFE8AA5B9D103213");

            entity.HasOne(d => d.Order).WithMany(p => p.OrderLists)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OrderListOrders_OrderID");

            entity.HasOne(d => d.Product).WithMany(p => p.OrderLists)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_OrderListProducts_ProductID");
        });

        modelBuilder.Entity<Picker>(entity =>
        {
            entity.HasKey(e => e.PickerID).HasName("PK__Pickers__405F43713C2BBC7B");

            entity.HasOne(d => d.Store).WithMany(p => p.Pickers)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PickersStores_StoreID");
        });

        modelBuilder.Entity<Product>(entity =>
        {
            entity.HasKey(e => e.ProductID).HasName("PK__Products__B40CC6ED2BE86243");

            entity.HasOne(d => d.Category).WithMany(p => p.Products)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ProductsCategories_CategoryID");
        });

        modelBuilder.Entity<Store>(entity =>
        {
            entity.HasKey(e => e.StoreID).HasName("PK__Stores__3B82F0E16BF8431E");

            entity.Property(e => e.Phone).IsFixedLength();
            entity.Property(e => e.Province).IsFixedLength();
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}